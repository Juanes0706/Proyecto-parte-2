-- Script para crear la tabla bus_estacion correctamente

-- 1. Verificar si la tabla bus_estacion existe
SELECT EXISTS (
   SELECT FROM information_schema.tables 
   WHERE table_name = 'bus_estacion'
);

-- 2. Crear la tabla bus_estacion si no existe
CREATE TABLE IF NOT EXISTS bus_estacion (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  bus_id BIGINT NOT NULL,
  estacion_id BIGINT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now())
);

-- 3. Agregar restricciones de clave for치nea si no existen
DO $$
BEGIN
  -- Restricci칩n para bus_id
  IF NOT EXISTS (
    SELECT 1 FROM pg_constraint WHERE conname = 'bus_estacion_bus_id_fkey'
  ) THEN
    ALTER TABLE bus_estacion
    ADD CONSTRAINT bus_estacion_bus_id_fkey
    FOREIGN KEY (bus_id) REFERENCES buses(id) ON DELETE CASCADE;
  END IF;

  -- Restricci칩n para estacion_id
  IF NOT EXISTS (
    SELECT 1 FROM pg_constraint WHERE conname = 'bus_estacion_estacion_id_fkey'
  ) THEN
    ALTER TABLE bus_estacion
    ADD CONSTRAINT bus_estacion_estacion_id_fkey
    FOREIGN KEY (estacion_id) REFERENCES estaciones(id) ON DELETE CASCADE;
  END IF;

  -- Restricci칩n de unicidad para pares bus_id - estacion_id
  IF NOT EXISTS (
    SELECT 1 FROM pg_constraint WHERE conname = 'bus_estacion_bus_id_estacion_id_key'
  ) THEN
    ALTER TABLE bus_estacion
    ADD CONSTRAINT bus_estacion_bus_id_estacion_id_key
    UNIQUE (bus_id, estacion_id);
  END IF;
END
$$;

-- 4. Verificar estructura de la tabla
SELECT column_name, data_type, column_default, is_nullable 
FROM information_schema.columns 
WHERE table_name = 'bus_estacion';

-- 5. Verificar restricciones
SELECT 
    con.conname AS constraint_name,
    con.contype AS constraint_type,
    pg_get_constraintdef(con.oid) AS constraint_definition
FROM 
    pg_constraint con
    JOIN pg_class rel ON rel.oid = con.conrelid
    JOIN pg_namespace nsp ON nsp.oid = rel.relnamespace
WHERE 
    rel.relname = 'bus_estacion';